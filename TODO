make
- rename ROOTDIR -> PROJ_BASE
- introduce APP_BASE

general
- watch out for sizeof(type var[0])
- constify RPC replies in clients and requests in servers
- check all bulkserver()'s for free_desc()
- sweep tree for \b0[0-9] and fix bad permissions (711 -> 700 - slash?)
- ctlapi GETTREE
- pfl: use "psc_" prefix and "_mt" (multithread-safe) postfix where sensical
- type fixes:
	(o) inttypes.h PRI[dioux]64 in place of _P_U64 and LPX
	(o) s/u64/uint64_t/
- investigate pthread_rwlocks for things like trees and large lists
- remove ifdef buttons
- watch out for "a - b" in cmp functions overflowing

slash
- piggyback small readdirs directly into READDIR replies

pfl
- no ifdefs
- watch out for lock reinitialization (i.e. LOCK_INIT twice)
- for psclog(), add extensibility mechanism for fmtstr,
  allowing app-specific callbacks (e.g. %r for zest clients)
- move iostat thr and interval thr here
- rename dynarray_hintlen -> dynarray_ensurelen
- create a refcnt manager for thread-safe activity

lnet
- move iostats outside of socklnd

zest
- test parity reconstruction service by rebuilding
  a block from each parity group
- investigate SIGPIPE mishandling in client zest library
  causing infinite loop
- investigate size of block addressing types causing
  unreasonable limits on maximum file system size, perhaps
  during file system creation time (hopefully only)
- fsck service is currently badly broken
- research faster CRC operations
- make a proper solution when running out of parity groups
  when servicing clients.  possible solution:
    (o) block new file opens until parity groups from older
        descriptors are finished
- do not allow clients to sit on parity groups, need some
  kind of reap/reclamation mechanism

- move parity block into random positions in the raid scheme
  to avoid placing all parity data on the same disk.
  however skip these on disk fail rebuild

  note: have the fastest disks grab each successive block in a pg,
  deprecates need for zigs, or at least current complexity of zigs.
- pass sizeof(iovs) to client on CONNECT
- write back support on server

- the *at family of routines allow any fd, not just a dirfd

consider adding a new keyword __local or something for thread-localized memory.



- see if pool initf allows us to set the arg type instead of void

- investigate proper control socket permissions checks.  regular
  users should be able to read some stats but only root users
  should be able to issue exit commands, etc.


move tests/bw and tests/sock out of tests
