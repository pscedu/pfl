/* $Id: zestClientRpc.h 2128 2007-11-03 23:54:31Z pauln $ */

#ifndef ZESTCLIRPC_H
#define ZESTCLIRPC_H 1

#include "zestRpcMDS.h"
#include "zestRpcIO.h"
#include "zestLock.h"
#include "zestRpc.h"

#include "zestClient.h"

#define ZEST_CLIENT_MDS_SERVICE  0
#define ZEST_CLIENT_IO_SERVICE   1
#define NUM_ZEST_CLIENT_SVCS 2

zest_spinlock_t zclient_service_dispatcher_lock;

typedef int (*service_connect)(lnet_nid_t);

struct zclient_service {
	struct zestrpc_import *csvc_import;
	lnet_nid_t             csvc_default_server_id;
	struct zlist_head      csvc_old_imports;
	zest_spinlock_t        csvc_lock;
	int                    csvc_failed;
	int                    csvc_initialized;
	service_connect        csvc_connect;
};

struct zclient_service *zclient_service_dispatcher[NUM_ZEST_CLIENT_SVCS];

#define get_mds_import (zclient_service_dispatcher[ZEST_CLIENT_MDS_SERVICE]->csvc_import)
#define get_io_import (zclient_service_dispatcher[ZEST_CLIENT_IO_SERVICE]->csvc_import)


/*<<<<<<<<<<  The below prototypes are auto-generated by fillproto */

/* $Id: zestClientRpc.h 2128 2007-11-03 23:54:31Z pauln $ */
extern
lnet_process_id_t	my_id;

/* no comments found for this variable */
extern
struct zestrpc_nbreqset *ioNbReqSet;

/*
 * no comments found for this procedure
 */
int
zclient_get_server_pid(void);

/*
 * RPC library: open a file
 * ofd: file descriptor from client library
 *      - client must make sure that this is unique, until close() is called
 * ofnam: file name
 * oflags: open flags
 * omode: open mode
 */
int zclient_mds_open(int ofd, const char *ofnam, u32 oflags, u32 omode, u64 *fdmagic);

/*
 * no comments found for this procedure
 */
int
zclient_mds_close(int fd, u64 fdmagic);

/*
 * no comments found for this procedure
 */
int
zclient_mds_fstat(int fd, struct stat *stb);

/*
 * no comments found for this procedure
 */
int zclient_mds_connect(lnet_nid_t server);

/*
 * no comments found for this procedure
 */
int
zclient_io_connect(lnet_nid_t server);

/** 
 * zest_client_nbcallback - call me when an async operation has completed
 *
 */
int
zest_client_nbcallback(struct zestrpc_request    *req,
		       struct zestrpc_async_args *cb_args);

/*
 * no comments found for this procedure
 */
int 
zest_io_interpret_set(struct zestrpc_request_set *set, 
		      void *arg, int status);

/**
 * zest_io_req_interpret_reply - reply handler meant to be used directly 
 *   or as a callback.
 *
 */
int 
zest_io_req_interpret_reply(struct zestrpc_request *req, 
			    void *arg, int status);

/**
 * zclient_io_request_create - external wrapper for _zclient_io_request_create
 */
struct zestrpc_request *
zclient_io_request_create(zest_stream_buffer_t *zsb);

/**
 * zclient_io_nbwrite - asynchronous, single-block write
 *                    RPC library: write bulk data
 * ciodw: pointer to wire protocol struct
 *        - assume that it is packed in the calling functions
 * bulk_iov: bulk data, packed into IOVEC array
 * niov: length of bulk_iov array
 */
ssize_t
zclient_io_nbwrite(zest_stream_buffer_t *zsb);

/**
 * zclient_io_write - synchronous, single-block write
 *                    RPC library: write bulk data
 * ciodw: pointer to wire protocol struct
 *        - assume that it is packed in the calling functions
 * bulk_iov: bulk data, packed into IOVEC array
 * niov: length of bulk_iov array
 */
ssize_t
zclient_io_write(zest_stream_buffer_t *zsb);

/*
 * no comments found for this procedure
 */
struct zclient_service *
zclient_service_create(__unusedx lnet_nid_t server,
		       u32 request_portal,
		       u32 reply_portal,
		       service_connect connect_fn);

/*
 * no comments found for this procedure
 */
int zclient_services_init(void);

/*<<<<<<<<<<   This is end of the auto-generated output from fillproto. */

#endif
