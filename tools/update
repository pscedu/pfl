#!/usr/bin/env bash
# $Id$

# PSC Advanced Systems projects self updater
#
# TODO
# parallelize git operations

# internal
#git clone ssh://source/a p
#cd p
#./bootstrap.sh

# open source
#git clone https://github.com/pscedu/proj.git
#cd proj
#./tools/update.sh

set -e

dir=$(readlink -f $(dirname $0)/..)
base=$(basename $dir)

echorun()
{
	echo "$@"
	"$@"
}

getrepo()
{
	local url=$1
	local dir=$2
	local base=$(basename $dir)

	if [ x"$dir" != x"proj" ]; then
		mkdir -p $dir
		cd $dir
	fi
	if git status >/dev/null 2>&1; then
		git pull

	# XXX remove me
	elif svn info >/dev/null 2>&1; then
		svn up

	else
		cd ..
		mv $base $base.svnold

		echorun git clone $url $base

		for i in $(cd $base.svnold && find .); do
			[ x"$i" = x"." ] && continue
			mkdir -p $(dirname $i)
			cp $base.svnold/$i $i
		done
		rmdir $base.svnold
	fi
}

pubrepo()
{
	(getrepo https://github.com/pscedu/${1//\//.}.git $1)
}

cd $dir
#pubrepo distrib/crcutil
pubrepo distrib/fuse
#pubrepo distrib/iozone
#pubrepo distrib/libs3
pubrepo distrib/posix-fstest
#pubrepo distrib/spiobench
pubrepo distrib/stumbleupon-tcollector
#pubrepo distrib/zfs-fuse
pubrepo fio
pubrepo idxutils
pubrepo psync
pubrepo sft
#pubrepo slash2
pubrepo src-upd
pubrepo xopctl

for i in $dir/inf/*/update.sh; do
	[ -e $i ] && . $i
done

pubrepo proj
